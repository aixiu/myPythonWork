#!/usr/bin/env python
# -*- coding: utf-8 -*-

# 汉诺塔的问题
# 规则：
    # 1、每次移动一个盘子
    # 2、任何时候大盘子在下面，小盘子在上面
# 方法：
    # 1、n=1： 直接把A上的一个盘子移动到C上， A->C
    # 2、n=2:
        # A:把小盘子从A放到B上， A->B
        # B:把大盘子从A放到C上， A->C
        # C:把小盘子从B放到C上， B->C
    # 3、n=3:
        # A:把A上的两个盘子，通过C移动到B上去， 调用递归实现
        # B:把A上剩下的一个最大盘子移动到C上， A->C
        # C:把B上两个盘子，借助于A，挪到C上去， 调用递归
    # 4、n = n：
        # A:把A上的n-1个盘子，借助于C，移动到B上去，调用递归
        # B:把A上的最大盘子，也是唯一一个，移动到C上，A->C
        # C：把B上n-1个盘子，借助于A，移动到C上， 调用递归