#!/usr/bin/env python
# -*- coding: utf-8 -*-

# str 字符串
    # str
    # 转义字符
    # 格式化
    # 内建函数

# 字符串
    # 表示文字信息
    # 用单引号，双引号，三引号括起来

s = 'i love lao wang'
print(s)

s = 'i love lao wang'
print(s)

s = '''
i 
love 
lao 
wang
'''
print(s)

# 转义字符
    # 用一个特色的方表示一系列不方便写出出的内容，比如：回车键，换行符等。    
    # 借助反斜杠字符，一旦字符串中出现反斜杠，则反斜杠后面一个或者几个字符表示已经不是原来的意思了，进行了转义
    # 在字符串中，一旦出现反斜杠就要加倍小心，可能由转义字符出现
    # 不同系统对换行操作有不同的表示
        # windows： \n
        # Linux: \r\n

# 转义符的案例
    # 想表达 let's Go
    # 使用转义字符

# 案例1
s = 'Let\'s Go'
print(s)

# 案例2  使用单双引号嵌套
s = "Let's Go"
print(s)

# 表示斜杠
    # 比如： c:\User\Augsnano

s = 'c:\\User\\Augsnano'
print(s)

# 表示回车换行
    # 想表达的是每个单词回车效果。

s = '今夕何夕兮，搴舟中流。\n今日何日兮，得与王子同舟。\n蒙羞被好兮，不訾诟耻。\n心几烦而不绝兮，得知王子。'
print(s)

# 单个斜杠的用法
    # 在 python 里，单个反斜杠表示此行未结束，出于美观，需要下一行继续

def myDemo(x, \
    y, \
         z):
    print('这是一句话')

myDemo(1, 2, 3)

# 格式化字符串
    # 把字符串按照一定格式进行打印或者填充
    # 格式化分类：
        # 传圣诞节模式化
        # format 函数

# 字符串的传统格式化方
    # 使用 % 进行格式化
    # % 也叫占位符
    # 占位符	用途
        # %s    字符串
        # %r	字符串，采用repr()的显示
        # %c	单个字符
        # %d	十进整数
        # %i	十进整数，同%d
        # %o	八进整数
        # %x	十六进整数
        # %e	指数，基底为e
        # %E	指数，基底为E
        # %f	浮点型
        # %F	浮点型，同%f
        # %g	指数e或浮点型，根据显示长度决定
        # %G	指数E或浮点型，根据显示长度决定
        # 格式字符前出现整数表示此占位符所占位置宽度
        # 格式字符前边出现 “-” 表示左对齐
        # 格式字符前边出现 “+” 表示右对齐
        # 0位数不足用 “0” 补齐
        # width 表示宽度
        # pricision 精度
        # https://www.cnblogs.com/gambler/p/9567165.html

# 传统格式化案例
    # 用 %s 表示简单的字符串
    # 占位符可以单独使用
s = 'I love %s'
print(s)

print(s %('wang'))
print(s %'wang')

print('I love %s' %('二麻子'))